on:
    pull_request:
    push:
        branches:
            - master
        tags:
            - "**"

name: "Tests"

jobs:
    tests:
        name: "Tests on PHP ${{ matrix.php-version }}"

        runs-on: ubuntu-latest

        strategy:
            matrix:
                php-version: [7.4, 8.0, 8.1, 8.2]

        steps:
            - name: "Checkout"
              uses: actions/checkout@v2

            - name: "Cache tools installed with phive"
              uses: actions/cache@v2
              with:
                  path: |
                      ~/.phive
                  key: phive-${{ runner.os }}-${{ matrix.php-version }}-${{ hashFiles('.phive/phars.xml') }}
                  restore-keys: |
                      phive-${{ runner.os }}-${{ matrix.php-version }}-
                      phive-${{ runner.os }}-
                      phive-

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-version }}
                  extensions: mbstring, xml, ctype, iconv, bcmath
                  coverage: none
                  tools: phive, composer:v2

            - name: Get composer cache directory
              id: composercache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache composer dependencies
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composercache.outputs.dir }}
                  key: composer-${{ runner.os }}-${{ matrix.php-version }}-${{ hashFiles('composer.*') }}
                  restore-keys: |
                      composer-${{ runner.os }}-${{ matrix.php-version }}-
                      composer-${{ runner.os }}-
                      composer-

            - name: "Install tools with phive"
              run: make tools-install

            - name: "Update PHPUnit for PHP 8"
              if: ${{ matrix.php-version < 7.4 }}
              run: phive --no-progress update phpunit

            - name: "Run tests"
              run: make tests
